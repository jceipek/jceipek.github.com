<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>software on Julian Ceipek</title><link>//jceipek.com/categories/software.html</link><description>Recent content in software on Julian Ceipek</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="//jceipek.com/categories/software/index.xml" rel="self" type="application/rss+xml"/><item><title>Dark</title><link>//jceipek.com/projects/dark.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/dark.html</guid><description>The Dark programming environment provides the easiest way to make a simple backend web service. Its holistic design makes it possible to safely program against live data, see the result of every data transformation, interact with third party web APIs, and read/write to databases &amp;mdash; all from the same interface.
As an engineer at Dark (the company), I&amp;hellip;
developed, documented, and tested Dark&amp;rsquo;s standard programming library &amp;mdash; the toolkit with which customers build software used by tens of thousands of end users.</description></item><item><title>Installation Visualizer</title><link>//jceipek.com/projects/installation-visualizer.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/installation-visualizer.html</guid><description>In 2021, I designed and led Beyond the Grid: Interactive Installations with Wacky Topologies for the DigitalFUTURES festival together with my longtime collaborator Behnaz Farahi. During the week-long workshop, we remotely taught 14 students around the globe (including Greece, China, England, Iran, and the US) how to design, build, and program interactive art sculptures with unusual shapes, sharing techniques we&amp;rsquo;d developed together in the preceding 6 years. Behnaz focused on teaching 3D design, fabrication, and soldering, while I taught the students practical math and programming techniques for bringing their work to life.</description></item><item><title>Lynx</title><link>//jceipek.com/projects/lynxtool.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/lynxtool.html</guid><description>While spreadsheets are the most approachable programming tools, their design hides the underlying calculations and relationships between cells. What if the calculations, data flows, and data could all be visible?
Before Lynxtool was acquired by Figma, Lynx was a browser-based visual programming environment for data analysts inspired by internal tools Tim Babb helped develop for movies at Pixar for over 10 years.
As the first hire at Lynxtool, I&amp;hellip;
designed, implemented, and documented an in-browser rendering engine and immediate mode user interface toolkit (IMGUI) optimized for Lynxâ€™s unique layout and interaction requirements.</description></item></channel></rss>