<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Julian Ceipek</title><link>//jceipek.com/</link><description>Recent content on Julian Ceipek</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="//jceipek.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Auraline</title><link>//jceipek.com/projects/auraline.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/auraline.html</guid><description/></item><item><title>Aurora</title><link>//jceipek.com/projects/aurora.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/aurora.html</guid><description/></item><item><title>Callbacks &amp; Scoping with Python and JS</title><link>//jceipek.com/projects/async.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/async.html</guid><description/></item><item><title>Caress of the Gaze</title><link>//jceipek.com/projects/cog.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/cog.html</guid><description/></item><item><title>Complete Galactic Dominion</title><link>//jceipek.com/projects/cgd.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/cgd.html</guid><description>In 2011, I took an introductory software design class at Olin, where I first learned Python and how to collaborate on non-trivial programming projects.
My team&amp;rsquo;s final project was Complete Galactic Dominion (CGD), an (over)ambitious real-time strategy game played on a toroidal map (the playing area doesn&amp;rsquo;t have defined boundaries but wraps around like old arcade games like Pac-Man).
By the time the class ended, CGD had one working resource, building, and unit type and theoretical support for an arbitrary number of networked players playing on different operating systems.</description></item><item><title>Cracking ElGamal for fun and profit</title><link>//jceipek.com/projects/elgamal.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/elgamal.html</guid><description/></item><item><title>Dark</title><link>//jceipek.com/projects/dark.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/dark.html</guid><description/></item><item><title>Daunting Dollhouse</title><link>//jceipek.com/projects/dauntingdollhouse.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/dauntingdollhouse.html</guid><description>Daunting Dollhouse is a rapid asymmetric two-player battle of wits and observation that pits a ghost against a ghost hunter. It arose from an interesting design constraint: what if players share a single screen that gives them each different hidden information?
The players each secretly control one of six funky dolls and try to conceal their identities by pretending to be computer-controlled characters. The ghost can switch between the bodies of different dolls while the hunter attempts to catch the ghost by listening for paranormal activity.</description></item><item><title>effect</title><link>//jceipek.com/projects/effect.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/effect.html</guid><description>I created effect as a 2 week experiment in large scale, local multi-person, multi-display interactions. Thirteen participants connected to a web app displaying a simple pipe puzzle and needed to collaborate in order to guide a ball through a maze. Each participant could rotate a single randomly assigned pipe in the puzzle by clicking on their screen, but they were not given any additional feedback. One additional computer projected a special version of the puzzle on a large projection screen.</description></item><item><title>engulf</title><link>//jceipek.com/projects/engulf.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/engulf.html</guid><description>You can&amp;rsquo;t really know if something is usable without using it. After making pyShiva, I wanted to use it to make something I couldn&amp;rsquo;t have easily made without it, and so I spent a day making a game demo. At the same time, I wanted to experiment with gesture-based interfaces.
The result: engulf, a frantic quest to consume nutrients and grow larger while escaping a cloud of enemies.
The gameplay and control scheme are finely tuned to take advantage of the Kinect; you must change your avatar&amp;rsquo;s appearance and size in order to eat food of the appropriate color while dodging between narrow gaps formed by the enemies harrowing you at every turn.</description></item><item><title>Evil Lairs for Dummies</title><link>//jceipek.com/projects/evillairsfordummiesgame.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/evillairsfordummiesgame.html</guid><description>Evil Lairs for Dummies is a game that promotes quick thinking and out-of-the-box creative problem solving within a loose storytelling framework.
You play as masterful team of super creative agents on a top secret mission. You retrieved The Great Mcguffin, and now you&amp;rsquo;re trying to escape from the Evil Supervillain&amp;rsquo;s Lair. The Lair is filled with deadly traps that you have to overcome as a team.
Variant 1 : Team vs Clock!</description></item><item><title>Game Path Planning</title><link>//jceipek.com/projects/gamepathplanning.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/gamepathplanning.html</guid><description/></item><item><title>Inspiration</title><link>//jceipek.com/inspiration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/inspiration/</guid><description>I like many things. Here are some of them, so they won&amp;rsquo;t get lost.
A collection of Explorable Explanations (explorableexplanations.com) Bret Victor&amp;rsquo;s projects build on human capabilities to extend thought (worrydream.com) Chris Granger also thinks programming is broken (www.chris-granger.com) Fiction to teach rationality (hpmor.com) Math should be legible (glench.com/LegibleMathematics) A collection of resources on simulating physics &amp;ldquo;for human visual consumption&amp;rdquo; (www.physicsbasedanimation.com) Soon, this list will be much longer.</description></item><item><title>Living Cloud</title><link>//jceipek.com/projects/livingcloud.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/livingcloud.html</guid><description>There is a divide between the physical, the rigid world of sensation and direct interaction, and the digital, the fluid world of abstract behaviors and dynamic computation. Over time, this boundary will blur; the digital world will extend into the physical and dynamic media will escape the confines of tiny rectangles in front of our faces. The living and working spaces of the future will adapt to us and our needs.</description></item><item><title>Making Faster Systems</title><link>//jceipek.com/projects/makingfastersystems.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/makingfastersystems.html</guid><description>This post is based on an in-person presentation I gave earlier this year to an audience of software, mechanical, and electrical engineers. Its examples are software-related, but the principles apply across domains.
In Structured Programming with go to Statements, Donald E. Knuth wrote &amp;ldquo;&amp;hellip;premature optimization is the root of all evil&amp;rdquo;, and people have been misquoting him ever since. They tend to miss both what he meant by &amp;ldquo;premature&amp;rdquo; and what has changed since he wrote those words in 1974.</description></item><item><title>Mesolite</title><link>//jceipek.com/projects/mesolite.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/mesolite.html</guid><description>I prototyped, architected, and developed the control software for an emotive display case commissioned by Adidas and designed by Behnaz Farahi. I used tricks from game development to reduce iteration bottlenecks and improve performance 20x.
Along the way, I
learned how to use a Raspberry Pi and used it to create a wifi-enabled realtime monitoring and simulation interface learned about servo motors and built a rapid calibration tool using the dials on a MIDI controller empowered an animator to orchestrate the individual and collective behavior of over a thousand color-changing lights in realtime</description></item><item><title>Octobo</title><link>//jceipek.com/projects/octobo.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/octobo.html</guid><description/></item><item><title>Olin Radical Gameplay Initiative</title><link>//jceipek.com/projects/gameplayinitiative.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/gameplayinitiative.html</guid><description/></item><item><title>Pix.</title><link>//jceipek.com/projects/pix.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/pix.html</guid><description>In 2012, @notch, the creator of Minecraft, started working on 0x10c, a space game in which players could program virtual spaceships with &amp;ldquo;DCPU-16&amp;rdquo; processors.
Shortly after it was announced, I teamed up with some students in my Computer Architecture class at Olin to create Pix, a 16-bit arcade game that would have run on these virtual processors. Although @notch has since cancelled 0x10c, you can still play Pix in an online emulator.</description></item><item><title>pyShiva</title><link>//jceipek.com/projects/pyshiva.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/pyshiva.html</guid><description>Getting computers to draw simple 2d graphics quickly used to be much easier than it is now. Graphics cards are great at drawing triangles but need to be taught to create more complex or organic shapes.
Lots of artists use Processing, but that language has all of the verbosity and incidental complexity of Java with hidden state and complexity approaching OpenGL. Why should an interactive artist need to understand transformation matrices in order to rotate shapes on the screen?</description></item><item><title>Resume</title><link>//jceipek.com/resume/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/resume/</guid><description/></item><item><title>Tendar</title><link>//jceipek.com/projects/tendar.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/tendar.html</guid><description/></item><item><title>Tetheron</title><link>//jceipek.com/projects/tetheron.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/tetheron.html</guid><description>Tetheron is a frantic 2-6 player competitive arcade game in which you swing around a destructible physics environment by tethering onto obstacles and other players. We&amp;rsquo;re developing the game as part of Richard Lemarchand&amp;rsquo;s Experimental Games class at the University of Southern California&amp;rsquo;s Interactive Media and Games graduate program and hope to release it soon.
To stay up to date with development, visit tetheron.com and follow us on twitter @tetheron.</description></item><item><title>The Doppler Effect</title><link>//jceipek.com/projects/doppler.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/doppler.html</guid><description>Learning science from a textbook is usually pretty boring. In 2010, Ars Technica hosted a competition to solicit science explanations that high school students would actually enjoy.
During my first year at Olin College of Engineering, I created and led a small team to make The Doppler Effect, a fun educational video that explains why the sounds cars make on a highway change pitch as they pass by. We became the winners of the Ars Science Video Contest, Physical Sciences Division.</description></item><item><title>The Under Presents</title><link>//jceipek.com/projects/tup.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/tup.html</guid><description>I&amp;rsquo;m currently the lead developer of the matchmaking server, administrator portal, and actor management interface of an ambitious immersive multiplayer live theater experience backed by Oculus and created by Tender Claws.
My past roles on the project include
leading the development of a specialized non-linear sequence editor for interactive narratives with motion capture creating a production-ready user interface for improv actors to manipulate shared virtual environments building tools for writers to visualize screenplays as 3d animatics architecting the player input system</description></item><item><title>Timeline</title><link>//jceipek.com/projects/timeline.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/timeline.html</guid><description>In 2012, I studied makers who use shared workspaces as part of an immersive exploration of user-oriented collaborative design. My design team used an applied ethnography approach to identify a compelling need and conceptualize a future solution to fulfill that need.
We visited &amp;ldquo;makerspaces&amp;rdquo; around Boston, observed makers at work, conducted in-depth interviews, created people portraits, developed personas, generated hundreds of ideas, and iterated on the most promising by working with our stakeholders though co-design techniques.</description></item><item><title>VILA</title><link>//jceipek.com/projects/vila.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/vila.html</guid><description>Programming is seriously broken. Becoming a programmer is hard, but not because solving problems computationally is inherently difficult. Becoming a programmer is hard because it involves so much cognitive friction. Programming today means simulating a computer in your head when you already have one in front of you. Programming today means dealing with the incidental complexity of poorly designed programming tools and archaic mental models.
I&amp;rsquo;ve become so frustrated with programming that I&amp;rsquo;ve decided to stop merely thinking about how much better it could be.</description></item><item><title>VVR</title><link>//jceipek.com/projects/vvr.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/vvr.html</guid><description/></item><item><title>Zoolemma!</title><link>//jceipek.com/projects/zoolemma.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//jceipek.com/projects/zoolemma.html</guid><description>Zoolemma! is a prototype for a purely strategic 2-3 player boardgame with two unique properties:
you can move your opponents' pieces as well as your own you all plan each move simultaneously to minimize player inaction Every time a piece moves on the board, the space upon which it lands determines how a different player&amp;rsquo;s piece moves. This mechanic leads to some very interesting meta strategies as players try to predict where their pieces will be during their turns and try to manipulate other players into helping them win.</description></item></channel></rss>